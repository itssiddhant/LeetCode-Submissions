{"id":1336218025,"question_id":14,"lang":"cpp","lang_name":"C++","time":"16 hours, 1 minute","timestamp":1722169903,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1336218025/","is_pending":"Not Pending","title":"Longest Common Prefix","memory":"N/A","code":"class TrieNode{\n    public: \n    char data;\n    TrieNode* children[26];\n    int childCount;\n    bool isTerminal;\n    \n    TrieNode(char ch){\n        data = ch;\n        for (int i =0 ; i<26;i++){\n            children[i]=NULL;\n        }\n        childCount =0;\n        isTerminal=false;\n    }\n    \n};\nclass Trie{\n    public: \n        TrieNode* root;\n        Trie(char ch){\n            root = new TrieNode(ch);\n        }\n        void insertUtil(TrieNode* root, string word){\n            if(word.length()==0){\n                root->isTerminal = true;\n                return;\n            }\n            int index = word[0] - 'a';\n            TrieNode* child;\n            if(root->children[index]!=NULL){\n                child = root->children[index];\n            }\n            else{\n                child = new TrieNode(word[0]);\n                root->childCount++;\n                root->children[index] = child;\n            }\n            insertUtil(child,word.substr(1));\n        }\n        void insert(string word) {\n            insertUtil(root,word);\n        }\n        void lcp(string str, string &ans){\n            for(int i=0; i<str.length(); i++){\n                char ch = str[i];\n                if(root->childCount==1){\n                    ans.push_back(ch);\n                    int index = ch - 'a';\n                    root= root->children[index];\n                }\n                else{\n                    break;\n                }\n                if(root->isTerminal) break;\n            }\n        }\n};\nclass Solution {\npublic:\n    string longestCommonPrefix(vector<string>& strs) {\n        Trie * t= new Trie('\\0');\n        \n    for(int i =0; i<strs.size();i++){\n        t->insert(strs[i]);\n    }\n    string first = strs[0];\n    string ans;\n    t->lcp(first,ans);\n    return ans;\n    }\n};","compare_result":"111111111111111111111110110101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101111111","title_slug":"longest-common-prefix","has_notes":false,"flag_type":1}