{"id":1203663441,"question_id":179,"lang":"c","lang_name":"C","time":"4 months, 2 weeks","timestamp":1710435599,"status":10,"status_display":"Accepted","runtime":"37 ms","url":"/submissions/detail/1203663441/","is_pending":"Not Pending","title":"Largest Number","memory":"5.7 MB","code":"char* largestNumber(int* nums, int numsSize) {\n    int hasNonZero = 0;\n    for (int i = 0; i < numsSize; i++) {\n        if (nums[i] != 0) {\n            hasNonZero = 1;\n            break;\n        }\n    }\n    if (!hasNonZero) {\n        char* result = (char*)malloc(2 * sizeof(char));\n        result[0] = '0';\n        result[1] = '\\0';\n        return result;\n    }\n    for (int i = 0; i < numsSize; i++) {\n        for (int j = i + 1; j < numsSize; j++) {\n            char str1[22], str2[22];\n            sprintf(str1, \"%d%d\", nums[i], nums[j]);\n            sprintf(str2, \"%d%d\", nums[j], nums[i]);\n            if (strcmp(str2, str1) > 0) {\n                int temp = nums[i];\n                nums[i] = nums[j];\n                nums[j] = temp;\n            }\n        }\n    }\n    char* rets = (char*)malloc((numsSize * 12 + 1) * sizeof(char));\n    rets[0] = '\\0';\n   for (int i = 0; i < numsSize; i++) {\n        sprintf(rets + strlen(rets), \"%d\", nums[i]);\n    }\n\n    return rets;\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-number","has_notes":false,"flag_type":1}