{"id":1223966274,"question_id":236,"lang":"c","lang_name":"C","time":"3 months, 3 weeks","timestamp":1712320379,"status":10,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/1223966274/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"19.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     struct TreeNode *left;\n *     struct TreeNode *right;\n * };\n */\n\nstruct TreeNode* lowestCommonAncestor(struct TreeNode* root, struct TreeNode* p,\n                                      struct TreeNode* q) {\n    struct TreeNode* lst;\n    struct TreeNode* rst;\n    if (root == NULL || root == p || root == q) {\n        return root;\n    }\n    lst = lowestCommonAncestor(root->left, p, q);\n    rst = lowestCommonAncestor(root->right, p, q);\n    if (!lst)\n        return rst;\n    if (!rst)\n        return lst;\n    return root;\n}","compare_result":"11111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}