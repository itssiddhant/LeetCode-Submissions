{"id":1329114879,"question_id":437,"lang":"cpp","lang_name":"C++","time":"6 days, 23 hours","timestamp":1721625013,"status":10,"status_display":"Accepted","runtime":"26 ms","url":"/submissions/detail/1329114879/","is_pending":"Not Pending","title":"Path Sum III","memory":"74.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void solve(TreeNode* root, int  targetSum, vector<int> path, int &count){\n        if(root==NULL) return ;\n\n        path.push_back(root->val);\n\n        solve(root->left,targetSum, path, count);\n        solve(root->right,targetSum, path, count);\n\n        int size = path.size();\n        long long sum = 0;\n\n        for(int i = size-1; i>=0; i--){\n            sum+=path[i];\n            if(sum==targetSum) count++;\n        }\n        path.pop_back();\n    }\n    int pathSum(TreeNode* root, int targetSum) {\n        vector<int> path;\n        int count =0 ;\n        solve(root,targetSum, path, count);\n        return count;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-iii","has_notes":false,"flag_type":1}