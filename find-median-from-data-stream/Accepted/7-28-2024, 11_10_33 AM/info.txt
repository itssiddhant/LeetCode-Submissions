{"id":1335884615,"question_id":295,"lang":"cpp","lang_name":"C++","time":"22 hours, 52 minutes","timestamp":1722145233,"status":10,"status_display":"Accepted","runtime":"283 ms","url":"/submissions/detail/1335884615/","is_pending":"Not Pending","title":"Find Median from Data Stream","memory":"123.9 MB","code":"class MedianFinder {\n    priority_queue<long> maxi;\n    priority_queue<long, vector<long>, greater<long>> mini;\npublic:\n    MedianFinder() {\n    }\n    \n    void addNum(int num) {\n        mini.push(num);\n        maxi.push(mini.top());\n        mini.pop();\n        if(mini.size()<maxi.size()){\n            mini.push(maxi.top());\n            maxi.pop();\n        }\n    }\n    \n    double findMedian() {\n        return mini.size()>maxi.size() ? mini.top() : (mini.top()+maxi.top())/2.0;\n    }\n};\n\n/**\n * Your MedianFinder object will be instantiated and called as such:\n * MedianFinder* obj = new MedianFinder();\n * obj->addNum(num);\n * double param_2 = obj->findMedian();\n */","compare_result":"111111111111111111111","title_slug":"find-median-from-data-stream","has_notes":false,"flag_type":1}