{"id":1307986303,"question_id":25,"lang":"cpp","lang_name":"C++","time":"3 weeks, 4 days","timestamp":1719993791,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1307986303/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"14.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseKGroup(ListNode* head, int k) {\n        ListNode* node = head;\n        for (int i = 0; i < k; ++i) {\n            if (node == NULL) {\n                return head;\n            }\n            node = node->next;\n        }\n        ListNode * prev = NULL;\n        ListNode * curr = head;\n        ListNode * next = NULL;\n        int count =0;\n\n        while(curr!=NULL && count<k){\n            next = curr->next;\n            curr->next = prev;\n            prev = curr;\n            curr = next;\n            count++;\n        }\n        if(next!=NULL){\n            head->next = reverseKGroup(next,k);\n        }\n        return prev;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-nodes-in-k-group","has_notes":false,"flag_type":1}