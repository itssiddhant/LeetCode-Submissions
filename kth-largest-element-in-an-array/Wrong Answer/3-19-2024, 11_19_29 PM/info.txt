{"id":1208404858,"question_id":215,"lang":"c","lang_name":"C","time":"4 months, 1 week","timestamp":1710870569,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1208404858/","is_pending":"Not Pending","title":"Kth Largest Element in an Array","memory":"N/A","code":"int partition(int* nums, int l, int r) {\n    int pivot = nums[r];\n    int i = l - 1;\n    for (int j = l; j < r; j++) {\n        if (nums[j] >= pivot) {\n            i++;\n            int temp = nums[i];\n            nums[i] = nums[j];\n            nums[j] = temp;\n        }\n    }\n    int temp = nums[i + 1];\n    nums[i + 1] = nums[r];\n    nums[l] = temp;\n    return i + 1;\n}\n\nint quickSelect(int* nums, int l, int r, int k) {\n    if (l <= r) {\n        int pivotIndex = partition(nums, l, r);\n        if (pivotIndex == k) {\n            return nums[pivotIndex];\n        } else if (pivotIndex < k) {\n            return quickSelect(nums, pivotIndex + 1, r, k);\n        } else {\n            return quickSelect(nums, l, pivotIndex - 1, k);\n        }\n    }\n    return -1;\n}\n\nint findKthLargest(int* nums, int numsSize, int k) {\n    return quickSelect(nums, 0, numsSize - 1, k - 1);\n}\n","compare_result":"00101110100000000110100010000010000000000","title_slug":"kth-largest-element-in-an-array","has_notes":false,"flag_type":1}