{"id":1331481377,"question_id":114,"lang":"cpp","lang_name":"C++","time":"4 days, 22 hours","timestamp":1721802403,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1331481377/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"16.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void flatten(TreeNode* root) {\n        TreeNode* curr ,*pre;\n        curr = root;\n\n        while(curr!=NULL){\n            if(curr->left){\n                pre=curr->left;\n                while(pre->right) {\n                    pre = pre->right;\n                }\n                pre->right = curr->right;\n                curr->right = curr->left;\n                curr->left = NULL;\n            }\n            curr= curr->right;\n        }\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list","has_notes":false,"flag_type":1}