{"id":1331761522,"question_id":98,"lang":"cpp","lang_name":"C++","time":"4 days, 16 hours","timestamp":1721821652,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1331761522/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isBST(TreeNode* root, int min, int max){\n        if(root==NULL)return true;\n        \n        if(root->val >min && root->val < max){\n            bool left = isBST(root->left, min, root->val);\n            bool right = isBST(root->right, root->val, max);\n            return left&&right;\n        }\n        return false;\n    }\n    bool isValidBST(TreeNode* root) {\n        return isBST(root,INT_MIN,INT_MAX);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111001111010101110011110111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}