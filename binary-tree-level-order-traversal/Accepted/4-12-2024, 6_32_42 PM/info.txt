{"id":1230358831,"question_id":102,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1712926962,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1230358831/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"14.9 MB","code":"#include <queue>\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),\n * right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        vector<vector<int>> ans;\n        int i,n;\n        queue<TreeNode*> q;   //queue initialize\n        if (root == NULL) //base case\n            return ans;\n        q.push(root); //pushing root into queue\n        while (!q.empty()) {\n            vector<int> curr;\n            n = q.size();\n            for (i = 0; i < n; i++) {\n                curr.push_back(q.front()->val);\n                if (q.front()->left) {\n                    q.push(q.front()->left);\n                }\n                if (q.front()->right) {\n                    q.push(q.front()->right);\n                }\n                q.pop();\n            }\n            ans.push_back(curr);\n        }\n    return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}