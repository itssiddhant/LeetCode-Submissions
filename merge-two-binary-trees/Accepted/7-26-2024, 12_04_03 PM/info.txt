{"id":1333803531,"question_id":617,"lang":"cpp","lang_name":"C++","time":"2 days, 21 hours","timestamp":1721975643,"status":10,"status_display":"Accepted","runtime":"33 ms","url":"/submissions/detail/1333803531/","is_pending":"Not Pending","title":"Merge Two Binary Trees","memory":"33.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {\n       if(!root1 &&!root2)return NULL;\n       if(!root1)return root2;\n       if(!root2)return root1;\n       root1->val +=root2->val;\n       root1->left = mergeTrees(root1->left,root2->left); \n       root1->right = mergeTrees(root1->right,root2->right); \n       return root1;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-binary-trees","has_notes":false,"flag_type":1}