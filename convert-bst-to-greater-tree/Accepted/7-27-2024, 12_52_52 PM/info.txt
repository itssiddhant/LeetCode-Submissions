{"id":1334839730,"question_id":538,"lang":"cpp","lang_name":"C++","time":"1 day, 21 hours","timestamp":1722064972,"status":10,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/1334839730/","is_pending":"Not Pending","title":"Convert BST to Greater Tree","memory":"34.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int sum =0;\n    void inorder(TreeNode* root){\n        if(root==NULL)return;\n\n        inorder(root->right);\n        sum+=root->val;\n        root->val = sum;\n        inorder(root->left);\n    }\n    TreeNode* convertBST(TreeNode* root) {\n        inorder(root);\n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"convert-bst-to-greater-tree","has_notes":false,"flag_type":1}