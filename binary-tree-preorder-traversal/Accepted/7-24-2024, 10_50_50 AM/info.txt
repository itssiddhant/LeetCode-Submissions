{"id":1331417072,"question_id":144,"lang":"cpp","lang_name":"C++","time":"4 days, 23 hours","timestamp":1721798450,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1331417072/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"10.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void solve(TreeNode* root, vector<int> &ans){\n        if(root==NULL)return;\n\n        ans.push_back(root->val);\n        solve(root->left,ans);\n        solve(root->right,ans);\n    }\n    vector<int> preorderTraversal(TreeNode* root) {\n        vector<int> ans;\n        solve(root,ans);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal","has_notes":false,"flag_type":1}