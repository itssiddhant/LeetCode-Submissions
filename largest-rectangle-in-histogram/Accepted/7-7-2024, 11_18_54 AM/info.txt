{"id":1312499930,"question_id":84,"lang":"cpp","lang_name":"C++","time":"3Â weeks","timestamp":1720331334,"status":10,"status_display":"Accepted","runtime":"143 ms","url":"/submissions/detail/1312499930/","is_pending":"Not Pending","title":"Largest Rectangle in Histogram","memory":"90.2 MB","code":"class Solution {\nprivate:\n    vector<int> nextSmallerElement(vector<int>&arr, int n){\n        stack<int> st;\n        st.push(-1);\n        vector<int> ans(n);\n\n        for(int i =n-1 ; i>=0 ;i--){\n            int ch = arr[i];\n            while(st.top()!=-1 && arr[st.top()]>=ch){\n                st.pop();\n            }\n            ans[i]= st.top();\n            st.push(i);\n        }\n        return ans;\n    }\n    vector<int> prevSmallerElement(vector<int>&arr, int n){\n        stack<int> st;\n        st.push(-1);\n        vector<int> ans(n);\n\n        for(int i =0 ; i<n ;i++){\n            int ch = arr[i];\n            while(st.top()!=-1 && arr[st.top()]>=ch){\n                st.pop();\n            }\n            ans[i]= st.top();\n            st.push(i);\n        }\n        return ans;\n    }\npublic:\n    int largestRectangleArea(vector<int>& heights) {\n        int n = heights.size();\n\n        vector<int> next(n);\n        next= nextSmallerElement(heights,n);\n        \n        vector<int> prev(n);\n        prev= prevSmallerElement(heights,n);\n\n        int area =0;\n\n        for(int i =0; i<n; i++){\n            int l = heights[i];\n            if(next[i]==-1){\n                next[i]=n;\n            }\n            int b = next[i] - prev[i] -1;\n\n            int newArea = l*b;\n\n            area = max(newArea,area);\n        }\n        return area;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-rectangle-in-histogram","has_notes":false,"flag_type":1}