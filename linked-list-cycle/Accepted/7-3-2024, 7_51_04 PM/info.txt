{"id":1308332490,"question_id":141,"lang":"cpp","lang_name":"C++","time":"3 weeks, 4 days","timestamp":1720016464,"status":10,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/1308332490/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"13.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        if(head==NULL){\n            return false;\n        }\n        map<ListNode*,bool>visited;\n        struct ListNode* temp = head;\n        while(temp!=NULL){\n            if(visited[temp]==true){\n                return true;\n            }\n            visited[temp]=true;\n            temp = temp->next;\n        }\n        return false;\n    }\n};","compare_result":"11111111111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}