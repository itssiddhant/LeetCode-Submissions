{"id":1317270672,"question_id":543,"lang":"cpp","lang_name":"C++","time":"2 weeks, 3 days","timestamp":1720681924,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/1317270672/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"22.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    pair<int,int> fD(TreeNode* root){\n        if(root==NULL){\n            pair<int,int> p = make_pair(0,0);\n            return p;\n        }\n        pair<int,int> left = fD(root->left);\n        pair<int,int> right = fD(root->right);\n\n        int op1= left.first;\n        int op2 = right.first;\n\n        int op3= left.second+right.second+1;\n\n        pair<int,int> ans ;\n        ans.first= max(op1,max(op2,op3));\n        ans.second = max(left.second,right.second)+1;\n        return ans;\n    }\n    int diameterOfBinaryTree(TreeNode* root) {\n        return fD(root).first-1;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree","has_notes":false,"flag_type":1}