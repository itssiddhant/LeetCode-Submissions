{"id":1333843773,"question_id":109,"lang":"cpp","lang_name":"C++","time":"2 days, 21 hours","timestamp":1721978369,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/1333843773/","is_pending":"Not Pending","title":"Convert Sorted List to Binary Search Tree","memory":"28.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\nTreeNode* toBST(ListNode* head, ListNode* tail){\n    ListNode *slow = head;\n    ListNode *fast = head;\n\n    if(head==tail)return NULL;\n\n    while(fast!=tail && fast->next!=tail){\n        fast = fast->next->next;\n        slow = slow->next;\n    }\n    TreeNode *ans = new TreeNode(slow->val);\n    ans->left = toBST(head,slow);\n    ans->right= toBST(slow->next,tail);\n    return ans;\n}\n    TreeNode* sortedListToBST(ListNode* head) {\n        if(head==NULL)return NULL;\n        return toBST(head,NULL);\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"convert-sorted-list-to-binary-search-tree","has_notes":false,"flag_type":1}