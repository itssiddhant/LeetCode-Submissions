{"id":1310150009,"question_id":234,"lang":"cpp","lang_name":"C++","time":"3 weeks, 2 days","timestamp":1720161492,"status":10,"status_display":"Accepted","runtime":"185 ms","url":"/submissions/detail/1310150009/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"135.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\nprivate:\n    bool cPal(vector<int> arr){\n        int n = arr.size();\n        int s =0;\n        int e =n-1;\n\n        while(s<=e){\n            if(arr[s]!=arr[e]){\n                return false;\n            }\n            s++;\n            e--;\n        }\n        return true;\n    }\npublic:\n    bool isPalindrome(ListNode* head) {\n        vector<int>arr;\n\n        ListNode* temp = head;\n\n        while(temp!=NULL){\n            arr.push_back(temp->val);\n            temp = temp->next;\n        }\n        return cPal(arr);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list","has_notes":false,"flag_type":1}