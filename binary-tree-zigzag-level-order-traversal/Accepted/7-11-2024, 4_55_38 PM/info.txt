{"id":1317495982,"question_id":103,"lang":"cpp","lang_name":"C++","time":"2 weeks, 3 days","timestamp":1720697138,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1317495982/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"13.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {\n        vector<vector<int>> ans ;\n\n        if(root== NULL) return ans;\n\n        queue<TreeNode*> q;\n\n        q.push(root);\n\n        bool ltr = true;\n\n        while(!q.empty()){\n            int size = q.size();\n            vector<int> temp(size);\n\n            for(int i =0; i<size; i++){\n                TreeNode* frontNode = q.front();\n                q.pop();\n\n                int index = ltr ? i : size- i -1;\n                temp[index]= frontNode->val;\n\n                if(frontNode->left) q.push(frontNode->left);\n                if(frontNode->right) q.push(frontNode->right);\n\n            }\n            ltr = !ltr;\n            ans.push_back(temp);\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false,"flag_type":1}