{"id":1331898979,"question_id":653,"lang":"cpp","lang_name":"C++","time":"4 days, 14 hours","timestamp":1721830467,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/1331898979/","is_pending":"Not Pending","title":"Two Sum IV - Input is a BST","memory":"35.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void solve(TreeNode* root, vector<int> &ans){\n        if(root==NULL)return;\n\n        solve(root->left,ans);\n        ans.push_back(root->val);\n        solve(root->right,ans);\n    }\n    bool findTarget(TreeNode* root, int k) {\n        vector<int> ans ;\n        solve(root,ans);\n        \n        int i =0, j=ans.size()-1;\n\n        while(i<j){\n            if(ans[i]+ans[j]==k)return true;\n            if(ans[i]+ans[j]<k)i++;\n            if(ans[i]+ans[j]>k)j--;\n        }\n        return false;\n\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"two-sum-iv-input-is-a-bst","has_notes":false,"flag_type":1}