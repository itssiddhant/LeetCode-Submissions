{"id":1318357054,"question_id":1029,"lang":"cpp","lang_name":"C++","time":"2 weeks, 2 days","timestamp":1720766433,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1318357054/","is_pending":"Not Pending","title":"Vertical Order Traversal of a Binary Tree","memory":"14.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> verticalTraversal(TreeNode* root) {\n        map<int, map<int,vector<int> > > nodes;\n        queue< pair<TreeNode*, pair<int,int> > > q;\n        vector<vector<int>> ans;\n\n        if(root == NULL ) return ans;\n\n        q.push({root,{0,0}});\n\n        while(!q.empty()){\n            pair<TreeNode*, pair<int,int> > temp = q.front();\n            q.pop();\n\n            TreeNode* frontNode = temp.first;\n\n            int hd = temp.second.first;\n            int level = temp.second.second;\n\n            nodes[hd][level].push_back(frontNode->val);\n\n            if(frontNode->left){\n                q.push({frontNode->left,{hd-1,level+1}});\n            }\n            if(frontNode->right){\n                q.push({frontNode->right,{hd+1,level+1}});\n            }\n        }\n        for(auto& i : nodes){\n            vector<int> res;\n            for(auto& j: i.second){\n                sort(j.second.begin(),j.second.end());\n                res.insert(res.end(),j.second.begin(),j.second.end());\n            }\n            ans.push_back(res);\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"vertical-order-traversal-of-a-binary-tree","has_notes":false,"flag_type":1}