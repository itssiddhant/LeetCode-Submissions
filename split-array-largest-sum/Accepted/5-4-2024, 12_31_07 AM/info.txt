{"id":1248508323,"question_id":410,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1714762867,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1248508323/","is_pending":"Not Pending","title":"Split Array Largest Sum","memory":"9 MB","code":"class Solution {\npublic:\n    bool isPossible(vector<int>& nums, int n, int k, int mid) {\n        int count = 1;\n        int sum = 0;\n\n        for (int i = 0; i < n; i++) {\n            if (sum + nums[i] <= mid) {\n                sum += nums[i];\n            } else {\n                count++;\n                if (count > k || nums[i] > mid) {\n                    return false;\n                }\n                sum = nums[i];\n            }\n        }\n        return true;\n    }\n    int splitArray(vector<int>& nums, int k) {\n        int s = 0;\n        int sum = 0;\n        int n = nums.size();\n\n        for (int i = 0; i < n; i++) {\n            sum += nums[i];\n        }\n        int e = sum;\n        int ans = -1;\n        int mid = s + (e - s) / 2;\n\n        if (k > n) {\n            return -1;\n        }\n        while (s <= e) {\n            if (isPossible(nums, n, k, mid)) {\n                ans = mid;\n                e = mid - 1;\n            } else {\n                s = mid + 1;\n            }\n            mid = s + (e - s) / 2;\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"split-array-largest-sum","has_notes":false,"flag_type":1}